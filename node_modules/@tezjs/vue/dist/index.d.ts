import { RouterOptions } from 'vue-router';
import { ModuleTree } from 'vuex';
import { DefineComponent } from 'vue';

interface TezAppOptions {
    components?: Record<string, () => Promise<{
        [key: string]: any;
    }>>;
    layouts?: Record<string, () => Promise<{
        [key: string]: any;
    }>>;
    pages?: Record<string, () => Promise<{
        [key: string]: any;
    }>>;
    routerOptions?: RouterOptions;
    store?: ModuleTree<unknown>;
    useVue?: (vue: any) => void;
    autoRoutes?: {
        urls: {
            [key: string]: any;
        };
        re: {
            [key: string]: any;
        };
    };
    dynamicRoutes?: {
        [key: string]: any;
    };
    isDevMode?: boolean;
    loaderImagePath?: string;
}

declare function createTezApp(tezAppOptions: TezAppOptions): void;

interface AfterInteractionConfig {
    scripts?: string[];
    preLoads?: {
        js: string[];
        css: string[];
    };
}

interface PayloadConfig {
    url: string;
    slots: {
        [key: string]: any;
    };
    masterPageSlots: {
        [key: string]: any;
    };
    layoutName: string;
    tags: {
        [key: string]: any;
    };
    postScript?: () => Promise<any>;
}

interface TezPage {
    components: {
        [key: string]: DefineComponent;
    };
    masterPage: {
        [key: string]: DefineComponent;
    };
    payload: PayloadConfig;
    afterInteraction?: AfterInteractionConfig;
    postScript: () => Promise<any>;
}

declare function registerTezPage(page: TezPage): void;

export { createTezApp, registerTezPage };
